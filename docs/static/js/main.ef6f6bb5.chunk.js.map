{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAC7B,EAAsCC,mBAAS,IAA/C,mBAAQC,EAAR,KAAoBC,EAApB,KAcA,OACC,sBAAMC,SAVc,SAACC,GACrBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC9BR,GAAc,SAACS,GAAD,OAAYP,GAAZ,mBAA2BO,OACzCN,EAAc,MAKf,SACC,uBACCO,KAAK,OACLC,MAAOT,EACPU,SAlBuB,SAACP,GAC1BF,EAAcE,EAAEQ,OAAOF,a,+BCHZG,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DACfC,EADe,iDAEuBC,UAAWH,GAFlC,+DAGFI,MAAMF,GAHJ,cAGfG,EAHe,gBAIEA,EAAKC,OAJP,uBAIbC,EAJa,EAIbA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC9B,MAAO,CACNC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVf,kBAcdM,GAdc,4CAAH,sDCDPO,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAEpC,OACC,sBAAKc,UAAU,yCAAf,UACC,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCHMO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAExB,ECH0B,SAACA,GAC5B,MAA4Bd,mBAAS,CACpCqB,KAAM,GACNa,SAAS,IAFV,mBAAQC,EAAR,KAAeC,EAAf,KAiBA,OAZAC,qBACC,WACCxB,EAAQC,GAAUwB,MAAK,SAACC,GACvBH,EAAS,CACRf,KAAMkB,EACNL,SAAS,SAIZ,CAAEpB,IAGIqB,EDf2BK,CAAa1B,GAAjCa,EAAb,EAAQN,KAAaa,EAArB,EAAqBA,QAEtB,OACG,qCACE,qBAAIJ,UAAU,oCAAd,cAAqDhB,EAArD,OACEoB,GAAW,mBAAGJ,UAAU,mCAAb,qBACb,qBAAKA,UAAU,YAAf,SAEMH,EAAOJ,KAAI,SAAAC,GAAG,OACZ,cAAC,EAAD,eAEMA,GADCA,EAAIC,aEXZgB,EAAe,WAC3B,MAAsCzC,mBAAS,CAAE,aAAjD,mBAAQ0C,EAAR,KAAoB3C,EAApB,KAQA,OACC,gCACC,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BACE2C,EAAWnB,KAAI,SAACT,GAAD,OACf,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,Y,MCjBnB6B,IAASC,OAAO,cAAC,EAAD,IAAkBC,SAASC,eAAe,W","file":"static/js/main.ef6f6bb5.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\tconst [ inputValue, setInputValue ] = useState(''); // ''\r\n\tconst handleInputChange = (e) => {\r\n\t\tsetInputValue(e.target.value);\r\n\t};\r\n\r\n\tconst handleSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\r\n\t\tif (inputValue.trim().length > 0) {\r\n\t\t\tsetCategories((cats) => [ inputValue, ...cats ]);\r\n\t\t\tsetInputValue('');\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t<input\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tvalue={inputValue}\r\n\t\t\t\tonChange={handleInputChange}\r\n\t\t\t/>\r\n\t\t</form>\r\n\t);\r\n};\r\n\r\nAddCategory.propTypes = {\r\n\tsetCategories: PropTypes.func.isRequired\r\n};\r\n","\r\n\r\n\r\nexport const getGifs = async ( category ) => {\r\n\t\tconst url =\r\n\t\t\t`https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category )}&limit=10&api_key=Ild0xt2uNQJh2zOS4XTg9XFrv55Smidq`;\r\n\t\tconst resp = await fetch(url);\r\n\t\tconst { data } = await resp.json();\r\n\r\n\t\tconst gifs = data.map((img) => {\r\n\t\t\treturn {\r\n\t\t\t\tid: img.id,\r\n\t\t\t\ttitle: img.title,\r\n\t\t\t\turl: img.images?.downsized_medium.url\r\n\t\t\t};\r\n\t\t});\r\n\r\n\t\treturn gifs;\r\n\t};","import React from 'react';\r\n\r\nexport const GifGridItem = ({ title, url }) => {\r\n\t// console.log(id, title, url);\r\n\treturn (\r\n\t\t<div className=\"card animate__animated animate__fadeIn\">\r\n\t\t\t<img src={url} alt={title} />\r\n\t\t\t<p>{title}</p>\r\n\t\t</div>\r\n\t);\r\n};\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n  const { data:images, loading } = useFetchGifs(category);\r\n\r\n\treturn (\r\n    <>\r\n      <h3 className=\"animate__animated animate__fadeIn\"> { category } </h3>\r\n      { loading && <p className=\"animate__animated animate__flash\">Loading</p>}\r\n      <div className=\"card-grid\">\r\n          {\r\n            images.map(img => (\r\n              <GifGridItem \r\n                key={img.id}\r\n                {...img}\r\n              /> \r\n            ))\r\n          }\r\n      </div>\r\n    </>\r\n\t);\r\n};\r\n","import { useState, useEffect } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n\tconst [ state, setState ] = useState({\r\n\t\tdata: [],\r\n\t\tloading: true\r\n\t});\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tgetGifs(category).then((imgs) => {\r\n\t\t\t\tsetState({\r\n\t\t\t\t\tdata: imgs,\r\n\t\t\t\t\tloading: false\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t},\r\n\t\t[ category ]\r\n\t);\r\n\r\n\treturn state; // {data: [], loading: true};\r\n};\r\n","import React from 'react';\r\nimport { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\tconst [ categories, setCategories ] = useState([ 'OnePunch' ]);\r\n\r\n\t// const handleAdd = () => {\r\n\t// \t// setCategories([ ...categories, 'Hunter X' ]);\r\n\t// \t// setCategories([ 'Hunter X', ...categories ]);\r\n\t// \tsetCategories((cats) => [ ...cats, 'Hunter X' ]);\r\n\t// };\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h2>GitExpertApp</h2>\r\n\t\t\t<AddCategory setCategories={setCategories} />\r\n\t\t\t<hr />\r\n\r\n\t\t\t<ol>\r\n\t\t\t\t{categories.map((category) => (\r\n\t\t\t\t\t<GifGrid key={category} category={category} />\r\n\t\t\t\t))}\r\n\t\t\t</ol>\r\n\t\t</div>\r\n\t);\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(<GifExpertApp />, document.getElementById('root'));\n"],"sourceRoot":""}